version: '3.8'

services:
  app:
    container_name: django-app
    build:
      context: ../../
      dockerfile: ./Docker/Local/Dockerfile
    image: &app app
    restart: "no"
    command: >-
      python3 start.py --waiting-service-name database --ip database
      --port 3306 --raising-service-name Django-App
      --command 'python3 manage.py runserver 0.0.0.0:8000'
    env_file: &envfile
      - ../../Envs/local.env
    ports:
      - 8000:8000
    volumes:
      - ../../App:/App
    depends_on:
      - database

  database:
    container_name: database
    platform: linux/x86_64
    image: mysql:5.6
    restart: always
    env_file: *envfile
    volumes:
      - ~/.mdbdata/App:/var/lib/mysql
    ports:
      - 3306:3306
    expose:
      - 3306

  redis:
    container_name: redis
    image: redis:6.2.6
    ports:
      - 6378:6379
    volumes:
      - ~/.mdbdata/App/redisdata:/data
    depends_on:
      - database

  celery-worker:
    container_name: celery-worker
    build: .
    image: *app
    restart: "no"
    env_file: *envfile
    command: >-
      python3 start.py --waiting-service-name database
      --ip database --port 3306 --raising-service-name Celery-Worker
      --command 'celery --app=Worker.worker.app worker
      --concurrency=1 --hostname=worker@%h --loglevel=INFO'
    volumes:
      - ../../App:/App
    depends_on:
      - rabbitmq

  celery-beat:
    container_name: celery-beat
    build: .
    image: *app
    env_file: *envfile
    command: >-
      python3 start.py --waiting-service-name database --ip database
      --port 3306 --raising-service-name Celery-Beat --command 'python3
      -m celery --app=Worker.worker.app beat -l debug -f
      /var/log/App-celery-beat.log --pidfile=/tmp/celery-beat.pid'
    volumes:
      - ../../App:/App
    depends_on:
      - celery-worker

  flower:
    container_name: flower
    image: zoomeranalytics/flower:0.9.2-4.0.2-2
    restart: "no"
    env_file: *envfile
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    env_file: *envfile
    ports:
      - 5672:5672
      - "15672:15672"
    volumes:
      - ~/.mdbdata/App/rabbitmq_data:/data
    depends_on:
      - database

  grafana:
    container_name: grafana
    image: grafana/grafana:8.3.3
    user: root
    ports:
      - 3000:3000
    volumes:
      - ~/.mdbdata/App/grafana_data:/var/lib/grafana
      - ~/.mdbdata/App/grafana/provisioning/:/etc/grafana/provisioning/
    restart: always
    depends_on:
      - database

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.1.0
    volumes:
      - ../../App/Settings/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - database